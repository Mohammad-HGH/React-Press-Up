"use strict";(self.webpackChunkblog_project=self.webpackChunkblog_project||[]).push([[854],{69854:function(e,r,a){a.r(r),a.d(r,{default:function(){return d}});a(72791);var s=a(58875),n=a(87546),o=a(506),t=a(28496),i=a(13515),l=a(80184),c=function(e){var r=e.label,a=e.variant,s=e.value,n=e.type,o=void 0===n?"label":n,t=e.size,c=void 0===t?"md":t,d=s||Math.floor(Math.random()*(Math.floor(100)-20+1))+20,m="label"===o?a:"white",p="tooltip"===o?"bg-".concat(a):"";return(0,l.jsxs)("div",{className:"progress-wrapper",children:[(0,l.jsxs)("div",{className:"progress-info",children:[(0,l.jsx)("div",{className:"progress-".concat(o," text-").concat(m," ").concat(p),children:r}),(0,l.jsx)("div",{className:"progress-percentage",children:(0,l.jsxs)("span",{children:[d,"%"]})})]}),(0,l.jsx)(i.Z,{className:"progress-".concat(c),variant:a,now:d,min:0,max:100})]})},d=function(){return(0,l.jsx)("article",{children:(0,l.jsxs)(s.Z,{className:"px-0",children:[(0,l.jsx)(n.Z,{className:"d-flex flex-wrap flex-md-nowrap align-items-center py-4",children:(0,l.jsxs)(o.Z,{className:"d-block mb-4 mb-md-0",children:[(0,l.jsx)("h1",{className:"h2",children:"Progress"}),(0,l.jsx)("p",{className:"mb-0",children:"Use progress bars to indicate percentage based components."})]})}),(0,l.jsx)(t.Z,{title:"Example",description:(0,l.jsxs)("p",{children:["Use the ",(0,l.jsx)("code",{children:"<Progress>"})," component to show progress bars or loaders for your app. You can set the value of the bar using the ",(0,l.jsx)("code",{children:"value"})," attribute. You can also change the appearance using the ",(0,l.jsx)("code",{children:'variant="*"'})," attributes using the default Bootstrap color classes, such as ",(0,l.jsx)("code",{children:"primary"}),", ",(0,l.jsx)("code",{children:"secondary"}),", ",(0,l.jsx)("code",{children:"danger"})," and so on."]}),scope:{Progress:c},imports:'import Progress from "src/components/Progress";',example:'<Progress variant="primary" label="Primary color" value={25} />'}),(0,l.jsx)(t.Z,{title:"Color variations",description:(0,l.jsxs)("p",{children:["To update the appearance of the ",(0,l.jsx)("code",{children:"<Progress>"})," component you can use the following classes for the ",(0,l.jsx)("code",{children:"variant"})," attribute. You can also add a label text using the ",(0,l.jsx)("code",{children:'label="lorem ipsum"'})," attribute."]}),scope:{Progress:c},imports:'import Progress from "src/components/Progress";',example:'<React.Fragment>\n  <Progress variant="secondary" label="Secondary color" />\n  <Progress variant="tertiary" label="Tertiary color" />\n  <Progress variant="dark" label="Dark color" />\n  <Progress variant="success" label="Success color" />\n  <Progress variant="info" label="Info color" />\n  <Progress variant="danger" label="Danger color" />\n</React.Fragment>'}),(0,l.jsx)(t.Z,{title:"Sizing",description:(0,l.jsxs)("p",{children:["You can also use one of the four available sizes for the ",(0,l.jsx)("code",{children:"<Progress>"})," updating the ",(0,l.jsx)("code",{children:'size="*"'})," attribute."]}),scope:{Progress:c},imports:'import Progress from "src/components/Progress";',example:'<React.Fragment>\n  <Progress variant="primary" label="XL Progress Bar" size="xl" />\n  <Progress variant="secondary" label="LG Progress Bar" size="lg" />\n  <Progress variant="tertiary" label="MD Progress Bar" size="md" />\n  <Progress variant="info" label="SM Progress Bar" size="sm" />\n</React.Fragment>'})]})})}},13515:function(e,r,a){a.d(r,{Z:function(){return p}});var s=a(87462),n=a(63366),o=a(81694),t=a.n(o),i=a(72791),l=a(89496);function c(e,r,a){var s=(e-r)/(a-r)*100;return Math.round(1e3*s)/1e3}function d(e,r){var a,o=e.min,l=e.now,d=e.max,m=e.label,p=e.srOnly,u=e.striped,g=e.animated,h=e.className,x=e.style,b=e.variant,f=e.bsPrefix,v=(0,n.Z)(e,["min","now","max","label","srOnly","striped","animated","className","style","variant","bsPrefix"]);return i.createElement("div",(0,s.Z)({ref:r},v,{role:"progressbar",className:t()(h,f+"-bar",(a={},a["bg-"+b]=b,a[f+"-bar-animated"]=g,a[f+"-bar-striped"]=g||u,a)),style:(0,s.Z)({width:c(l,o,d)+"%"},x),"aria-valuenow":l,"aria-valuemin":o,"aria-valuemax":d}),p?i.createElement("span",{className:"sr-only"},m):m)}var m=i.forwardRef((function(e,r){var a=e.isChild,o=(0,n.Z)(e,["isChild"]);if(o.bsPrefix=(0,l.vE)(o.bsPrefix,"progress"),a)return d(o,r);var c=o.min,m=o.now,p=o.max,u=o.label,g=o.srOnly,h=o.striped,x=o.animated,b=o.bsPrefix,f=o.variant,v=o.className,P=o.children,j=(0,n.Z)(o,["min","now","max","label","srOnly","striped","animated","bsPrefix","variant","className","children"]);return i.createElement("div",(0,s.Z)({ref:r},j,{className:t()(v,b)}),P?function(e,r){var a=0;return i.Children.map(e,(function(e){return i.isValidElement(e)?r(e,a++):e}))}(P,(function(e){return(0,i.cloneElement)(e,{isChild:!0})})):d({min:c,now:m,max:p,label:u,srOnly:g,striped:h,animated:x,bsPrefix:b,variant:f},r))}));m.displayName="ProgressBar",m.defaultProps={min:0,max:100,animated:!1,isChild:!1,srOnly:!1,striped:!1};var p=m}}]);
//# sourceMappingURL=854.8be2fd91.chunk.js.map