{"version":3,"file":"static/js/520.e42f339a.chunk.js","mappings":"gTAMA,EAJgCA,EAAAA,cAAoB,CAElDC,QAAS,eCQPC,EAA2BF,EAAAA,YAAiB,SAAUG,EAAMC,GAC9D,IAAIC,EAAWF,EAAKE,SAChBC,EAAaH,EAAKG,WAClBC,EAAeJ,EAAKI,aACpBC,EAAcL,EAAKK,YACnBC,EAAYN,EAAKM,UACjBC,EAAWP,EAAKO,SAChBC,GAAQC,EAAAA,EAAAA,GAA8BT,EAAM,CAAC,WAAY,aAAc,eAAgB,cAAe,YAAa,aAEvHE,GAAWQ,EAAAA,EAAAA,IAAmBR,EAAU,gBACxC,IAAIS,GAAUC,EAAAA,EAAAA,YAAWC,GACrBC,GAAcC,EAAAA,EAAAA,IAAiB,SAAUC,GACvCL,GAAWA,EAAQb,SACrBa,EAAQb,QAAQkB,MAGpB,OAAoBnB,EAAAA,cAAoB,OAAOoB,EAAAA,EAAAA,GAAS,CACtDhB,IAAKA,GACJO,EAAO,CACRF,UAAWY,IAAWhB,EAAUI,KAC9BC,EAAUF,GAA4BR,EAAAA,cAAoBsB,EAAAA,EAAa,CACzE,aAAchB,EACdiB,QAAShB,EACTiB,QAASP,EACTR,UAAW,YACX,eAAgB,cAGpBP,EAAYuB,YAAc,cAC1BvB,EAAYwB,aAjCO,CACjBpB,WAAY,QACZE,aAAa,GAgCf,QCzCA,GAAemB,E,SAAAA,GAAmB,cCS9BC,EAAqB5B,EAAAA,YAAiB,SAAUG,EAAMC,GACxD,IAAIC,EAAWF,EAAKE,SAChBI,EAAYN,EAAKM,UACjBC,EAAWP,EAAKO,SAChBmB,EAAkB1B,EAAK2B,WACvBC,OAAiC,IAApBF,EAA6BG,EAAAA,EAAOH,EACjDI,EAAY9B,EAAK+B,KACjBA,OAAqB,IAAdD,GAA8BA,EACrCE,EAAiBhC,EAAKiC,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/CE,EAAalC,EAAKmC,MAClBA,OAAuB,IAAfD,EAAwB,IAAOA,EACvCE,EAAgBpC,EAAKqC,SACrBA,OAA6B,IAAlBD,GAAmCA,EAC9CtC,EAAUE,EAAKF,QACfU,GAAQC,EAAAA,EAAAA,GAA8BT,EAAM,CAAC,WAAY,YAAa,WAAY,aAAc,OAAQ,YAAa,QAAS,WAAY,YAE9IE,GAAWQ,EAAAA,EAAAA,IAAmBR,EAAU,SAGxC,IAAIoC,GAAWC,EAAAA,EAAAA,QAAOJ,GAClBK,GAAaD,EAAAA,EAAAA,QAAOzC,IACxB2C,EAAAA,EAAAA,YAAU,WACRH,EAASI,QAAUP,EACnBK,EAAWE,QAAU5C,IACpB,CAACqC,EAAOrC,IACX,IAAI6C,GAAkBC,EAAAA,EAAAA,KAClBC,KAAmBR,IAAYN,GAC/Be,GAAeC,EAAAA,EAAAA,cAAY,WACzBF,IACoB,MAAtBL,EAAWE,SAA2BF,EAAWE,aAElD,CAACG,KACJJ,EAAAA,EAAAA,YAAU,WAERE,EAAgBK,IAAIF,EAAcR,EAASI,WAC1C,CAACC,EAAiBG,IACrB,IAAIG,GAAeC,EAAAA,EAAAA,UAAQ,WACzB,MAAO,CACLpD,QAASA,KAEV,CAACA,IACAqD,KAAkBvB,IAAcK,GAChCmB,EAAqBvD,EAAAA,cAAoB,OAAOoB,EAAAA,EAAAA,GAAS,GAAIT,EAAO,CACtEP,IAAKA,EACLK,UAAWY,IAAWhB,EAAUI,GAAY6C,IAAiBpB,EAAO,OAAS,SAC7EsB,KAAM,QACN,YAAa,YACb,cAAe,SACb9C,GACJ,OAAoBV,EAAAA,cAAoBgB,EAAAA,SAAuB,CAC7DyC,MAAOL,GACNE,GAAgBvB,EAA0B/B,EAAAA,cAAoB+B,EAAY,CAC3E2B,GAAIxB,EACJyB,eAAe,GACdJ,GAASA,MAEd3B,EAAMH,YAAc,QACpB,MAAemC,OAAOC,OAAOjC,EAAO,CAClCkC,KAAMC,EACNC,OAAQ9D,I,2EC7DV,aACE,OAAsC+D,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAMA,OACE,8BACE,UAACC,EAAA,EAAD,CAAW/D,UAAU,OAArB,WACE,SAACgE,EAAA,EAAD,CAAKhE,UAAU,0DAAf,UACE,UAACiE,EAAA,EAAD,CAAKjE,UAAU,uBAAf,WACE,eAAIA,UAAU,KAAd,qBACA,cAAGA,UAAU,OAAb,oDAMJ,SAACkE,EAAA,EAAD,CACEC,MAAM,UACNC,aACE,iCACE,qCAAW,sCAAX,mHAAwJ,6CAAxJ,SAAkM,2CAAlM,iDACA,kDAAwB,0CAAxB,gEAGJC,MAAO,CAAEC,KAAAA,EAAAA,EAAMnD,MAAAA,EAAOoD,OAAAA,EAAAA,EAAQf,SAAAA,EAAAA,SAAUgB,gBAAAA,EAAAA,EAAiBC,YAAAA,EAAAA,IAAahB,YAAAA,EAAaC,eAAAA,EAAgBgB,mBAxBhF,kBAAMhB,GAAe,KAyBxCiB,QAAO,8WAOPC,QAAO,0dAaT,SAACV,EAAA,EAAD,CACEC,MAAM,SACNC,aACE,8EAAoD,sCAApD,iDAA+H,yCAA/H,MAAwJ,2CAAxJ,oBAAiM,mCAAjM,gCAA8O,sCAA9O,iBAEFC,MAAO,CAAElD,MAAAA,EAAOoD,OAAAA,EAAAA,EAAQf,SAAAA,EAAAA,SAAUgB,gBAAAA,EAAAA,EAAiBC,YAAAA,EAAAA,IAAad,YAAAA,EAAaC,eAAAA,EAAgBiB,mBAjD1E,kBAAMjB,GAAe,IAiDyEC,aAAAA,EAAcC,gBAAAA,EAAiBgB,oBAhD5H,kBAAMhB,GAAgB,KAiD1Ca,QAAO,udAUPC,QAAO,skC,mGCtEbG,EAAY,CACd,aAAcC,IAAAA,OACdjE,QAASiE,IAAAA,KAOTlE,QAASkE,IAAAA,MAAgB,CAAC,WAKxBnE,EAA2BtB,EAAAA,YAAiB,SAAUG,EAAMC,GAC9D,IAAIK,EAAYN,EAAKM,UACjBc,EAAUpB,EAAKoB,QACfZ,GAAQC,EAAAA,EAAAA,GAA8BT,EAAM,CAAC,YAAa,YAE9D,OAAoBH,EAAAA,cAAoB,UAAUoB,EAAAA,EAAAA,GAAS,CACzDhB,IAAKA,EACLsF,KAAM,SACNjF,UAAWY,IAAW,YAAaE,GAAW,aAAeA,EAASd,IACrEE,OAELW,EAAYG,YAAc,cAC1BH,EAAYkE,UAAYA,EACxBlE,EAAYI,aAhBO,CACjB,aAAc,SAgBhB","sources":["../node_modules/@themesberg/react-bootstrap/lib/esm/ToastContext.js","../node_modules/@themesberg/react-bootstrap/lib/esm/ToastHeader.js","../node_modules/@themesberg/react-bootstrap/lib/esm/ToastBody.js","../node_modules/@themesberg/react-bootstrap/lib/esm/Toast.js","pages/components/Toasts.js","../node_modules/@themesberg/react-bootstrap/lib/esm/CloseButton.js"],"sourcesContent":["import React from 'react'; // TODO: check\n\nvar ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose: function onClose() {}\n});\nexport default ToastContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nvar ToastHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      closeLabel = _ref.closeLabel,\n      closeVariant = _ref.closeVariant,\n      closeButton = _ref.closeButton,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"closeLabel\", \"closeVariant\", \"closeButton\", \"className\", \"children\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  var context = useContext(ToastContext);\n  var handleClick = useEventCallback(function (e) {\n    if (context && context.onClose) {\n      context.onClose(e);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children, closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    \"aria-label\": closeLabel,\n    variant: closeVariant,\n    onClick: handleClick,\n    className: \"ml-2 mb-1\",\n    \"data-dismiss\": \"toast\"\n  }));\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? Fade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 5000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n  var toast = /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, hasAnimation && Transition ? /*#__PURE__*/React.createElement(Transition, {\n    in: show,\n    unmountOnExit: true\n  }, toast) : toast);\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBootstrap } from '@fortawesome/free-brands-svg-icons';\nimport { Col, Row, Card, Toast, Button, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\n\n\nexport default () => {\n  const [showDefault, setShowDefault] = useState(true);\n  const [showPrimary, setShowPrimary] = useState(true);\n  const [showTertiary, setShowTertiary] = useState(true);\n\n  const handleCloseDefault = () => setShowDefault(false);\n  const handleClosePrimary = () => setShowPrimary(false);\n  const handleCloseTertiary = () => setShowTertiary(false);\n\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Toasts</h1>\n            <p className=\"mb-0\">\n              Use toasts to indicate messages.\n          </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Toast&#x3E;</code> component to show messages and notifications to the user. The component is split into two main subcomponents: <code>&#x3C;Toast.Header&#x3E;</code> and <code>&#x3C;Toast.Body&#x3E;</code> where you can add the text that you want.</p>\n              <p>You can also use the <code>handleClose</code> function to handle the event of closing the component.</p>\n            </>\n          }\n          scope={{ Card, Toast, Button, useState, FontAwesomeIcon, faBootstrap, showDefault, setShowDefault, handleCloseDefault }}\n          imports={`import React, { useState } from 'react';\nimport { Card, Toast, Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBootstrap } from '@fortawesome/free-brands-svg-icons';\n\nconst [showDefault, setShowDefault] = useState(true);\nconst toggleDefaultToast = () => setShowDefault(!showDefault);`}\n          example={`<Toast show={showDefault} onClose={handleCloseDefault} className=\"my-3\">\n    <Toast.Header className=\"text-primary\" closeButton={false}>\n        <FontAwesomeIcon icon={faBootstrap} />\n        <strong className=\"me-auto ms-2\">Volt</strong>\n        <small>11 mins ago</small>\n        <Button variant=\"close\" size=\"xs\" onClick={handleCloseDefault} />\n    </Toast.Header>\n    <Toast.Body>\n        Hello, world! This is a toast message.\n    </Toast.Body>\n</Toast>`}\n        />\n\n        <Documentation\n          title=\"Colors\"\n          description={\n            <p>If you'd like to customize the appearance of the <code>&#x3C;Toast&#x3E;</code> component, you can easily do so by adding a <code>bg-primary</code>, <code>bg-secondary</code>, and any other <code>bg-*</code> modifier class to the main <code>&#x3C;Toast&#x3E;</code> component.</p>\n          }\n          scope={{ Toast, Button, useState, FontAwesomeIcon, faBootstrap, showPrimary, setShowPrimary, handleClosePrimary, showTertiary, setShowTertiary, handleCloseTertiary }}\n          imports={`import React, { useState } from 'react';\nimport { Toast, Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBootstrap } from '@fortawesome/free-brands-svg-icons';\n\nconst [showPrimary, setShowPrimary] = useState(true);\nconst [showTertiary, setShowTertiary] = useState(true);\n\nconst handleClosePrimary = () => setShowPrimary(false);\nconst handleCloseTertiary = () => setShowTertiary(false);`}\n          example={`<React.Fragment>\n  <Toast show={showPrimary} onClose={handleClosePrimary} className=\"bg-primary text-white my-3\">\n      <Toast.Header className=\"text-primary\" closeButton={false}>\n          <FontAwesomeIcon icon={faBootstrap} />\n          <strong className=\"me-auto ms-2\">Themesberg</strong>\n          <small>11 mins ago</small>\n          <Button variant=\"close\" size=\"xs\" onClick={handleClosePrimary} />\n      </Toast.Header>\n      <Toast.Body>\n          Hello, world! This is a toast message.\n      </Toast.Body>\n  </Toast>\n\n  <Toast show={showTertiary} onClose={handleCloseTertiary} className=\"bg-secondary text-white my-3\">\n      <Toast.Header className=\"text-primary\" closeButton={false}>\n          <FontAwesomeIcon icon={faBootstrap} />\n          <strong className=\"me-auto ms-2\">Themesberg</strong>\n          <small>11 mins ago</small>\n          <Button variant=\"close\" size=\"xs\" onClick={handleCloseTertiary} />\n      </Toast.Header>\n      <Toast.Body>\n          Hello, world! This is a toast message.\n      </Toast.Body>\n  </Toast>\n</React.Fragment>`}\n        />\n\n      </Container>\n    </article>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nvar defaultProps = {\n  'aria-label': 'Close'\n};\nvar CloseButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      variant = _ref.variant,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('btn-close', variant && \"btn-close-\" + variant, className)\n  }, props));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;"],"names":["React","onClose","ToastHeader","_ref","ref","bsPrefix","closeLabel","closeVariant","closeButton","className","children","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","context","useContext","ToastContext","handleClick","useEventCallback","e","_extends","classNames","CloseButton","variant","onClick","displayName","defaultProps","createWithBsPrefix","Toast","_ref$transition","transition","Transition","Fade","_ref$show","show","_ref$animation","animation","_ref$delay","delay","_ref$autohide","autohide","delayRef","useRef","onCloseRef","useEffect","current","autohideTimeout","useTimeout","autohideToast","autohideFunc","useCallback","set","toastContext","useMemo","hasAnimation","toast","role","value","in","unmountOnExit","Object","assign","Body","ToastBody","Header","useState","showDefault","setShowDefault","showPrimary","setShowPrimary","showTertiary","setShowTertiary","Container","Row","Col","Documentation","title","description","scope","Card","Button","FontAwesomeIcon","faBootstrap","handleCloseDefault","imports","example","handleClosePrimary","handleCloseTertiary","propTypes","PropTypes","type"],"sourceRoot":""}