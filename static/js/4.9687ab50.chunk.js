"use strict";(self.webpackChunkblog_project=self.webpackChunkblog_project||[]).push([[4],{96004:function(o,n,t){t.r(n);t(72791);var e=t(54483),r=t(53174),a=t(58875),i=t(87546),s=t(506),m=t(80505),c=t(57860),d=t(2881),p=t(28496),l=t(80184);n.default=function(){return(0,l.jsx)("article",{children:(0,l.jsxs)(a.Z,{className:"px-0",children:[(0,l.jsx)(i.Z,{className:"d-flex flex-wrap flex-md-nowrap align-items-center py-4",children:(0,l.jsxs)(s.Z,{className:"d-block mb-4 mb-md-0",children:[(0,l.jsx)("h1",{className:"h2",children:"Buttons"}),(0,l.jsx)("p",{className:"mb-0",children:"Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more."})]})}),(0,l.jsx)(p.Z,{title:"Example",description:(0,l.jsxs)("p",{children:["The ",(0,l.jsx)("code",{children:"<Button>"})," component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the ",(0,l.jsx)("code",{children:"variant"})," attribute."]}),scope:{Button:m.Z},imports:"import { Button } from '@themesberg/react-bootstrap';",example:'<React.Fragment>\n  <Button variant="primary" className="m-1">Primary</Button>\n  <Button variant="secondary" className="m-1">Secondary</Button>\n  <Button variant="tertiary" className="m-1">Tertiary</Button>\n  <Button variant="info" className="m-1">Info</Button>\n  <Button variant="success" className="m-1">Success</Button>\n  <Button variant="warning" className="m-1">Warning</Button>\n  <Button variant="danger" className="m-1">Danger</Button>\n  <Button variant="dark" className="m-1">Dark</Button>\n  <Button variant="gray" className="m-1">Gray</Button>\n  <Button variant="light" className="m-1">Light</Button>\n  <Button variant="white" className="m-1">White</Button>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Button sizing",description:(0,l.jsxs)("p",{children:["The ",(0,l.jsx)("code",{children:"<Button>"})," component comes with three main sizing options: ",(0,l.jsx)("code",{children:"sm"}),", default, and ",(0,l.jsx)("code",{children:"lg"}),". In order to change the size of the button you need to set the size using the ",(0,l.jsx)("code",{children:"size"})," attribute."]}),scope:{Button:m.Z},imports:"import { Button } from '@themesberg/react-bootstrap';",example:'<React.Fragment>\n  <Button variant="primary" size="sm" className="me-1">Small</Button>\n  <Button variant="primary" className="me-1">Regular</Button>\n  <Button variant="primary" size="lg" className="me-1">Large Button</Button>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Buttons with outline",description:(0,l.jsxs)("p",{children:["Instead of a fully colored background, you can also choose to style the ",(0,l.jsx)("code",{children:"<Button>"})," component to only have an outline border by using the ",(0,l.jsx)("code",{children:"outline-primary"}),", ",(0,l.jsx)("code",{children:"outline-secondary"})," modifier classes inside the ",(0,l.jsx)("code",{children:"variant"})," attribute."]}),scope:{Button:m.Z},imports:"import { Button } from '@themesberg/react-bootstrap';",example:'<React.Fragment>\n  <Button variant="outline-primary" className="m-1">Primary</Button>\n  <Button variant="outline-secondary" className="m-1">Secondary</Button>\n  <Button variant="outline-tertiary" className="m-1">Tertiary</Button>\n  <Button variant="outline-info" className="m-1">Info</Button>\n  <Button variant="outline-success" className="m-1">Success</Button>\n  <Button variant="outline-danger" className="m-1">Danger</Button>\n  <Button variant="outline-dark" className="m-1">Dark</Button>\n  <Button variant="outline-gray" className="m-1">Gray</Button>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Link buttons",description:(0,l.jsxs)("p",{children:["If you want to use the ",(0,l.jsx)("code",{children:"<Button>"})," component, but without the appearance of a button, just use the ",(0,l.jsx)("code",{children:'bsPrefix="text"'})," attribute to create link styled buttons."]}),scope:{Button:m.Z},imports:"import { Button } from '@themesberg/react-bootstrap';",example:'<React.Fragment>\n  <Button bsPrefix="text" href="#primary" variant="primary" className="m-3">Primary</Button>\n  <Button bsPrefix="text" href="#secondary" variant="secondary" className="m-3">Secondary</Button>\n  <Button bsPrefix="text" href="#tertiary" variant="tertiary" className="m-3">Tertiary</Button>\n  <Button bsPrefix="text" href="#info" variant="info" className="m-3">Info</Button>\n  <Button bsPrefix="text" href="#success" variant="success" className="m-3">Success</Button>\n  <Button bsPrefix="text" href="#danger" variant="danger" className="m-3">Danger</Button>\n  <Button bsPrefix="text" href="#dark" variant="dark" className="m-3">Dark</Button>\n  <Button bsPrefix="text" href="#gray" variant="gray" className="m-3">Gray</Button>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Buttons with icon",description:(0,l.jsxs)("p",{children:["You may want to use icons inside the ",(0,l.jsx)("code",{children:"<Button>"})," component, which can be done by simply adding a ",(0,l.jsx)("code",{children:"<FontAwesomeIcon>"})," component inside the button element."]}),scope:{Button:m.Z,FontAwesomeIcon:e.G,faHeart:r.m6i,faThumbsUp:r.u8Q},imports:'import { Button } from \'@themesberg/react-bootstrap\';\nimport { FontAwesomeIcon } from "@fortawesome/react-fontawesome";\nimport { faHeart, faThumbsUp } from "@fortawesome/free-solid-svg-icons";',example:'<React.Fragment>\n  <Button variant="outline-primary" className="m-1">\n    <FontAwesomeIcon icon={faHeart} className="me-2" /> Primary\n  </Button>\n  <Button variant="outline-secondary" className="m-1">\n    <FontAwesomeIcon icon={faThumbsUp} className="me-2" /> Secondary\n  </Button>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Block level Buttons",description:(0,l.jsxs)("p",{children:["Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the ",(0,l.jsx)("code",{children:"w-100"})," class to the component."]}),scope:{Button:m.Z},imports:"import { Button } from '@themesberg/react-bootstrap';",example:'<Button variant="secondary" color="dark" className="w-100">Block</Button>'}),(0,l.jsx)(p.Z,{title:"Disabled state",description:(0,l.jsxs)("p",{children:["You may want to disable the ",(0,l.jsx)("code",{children:"<Button>"})," component for various reasons, so you need to add the ",(0,l.jsx)("code",{children:"disabled"})," attribute in order to achieve that."]}),scope:{Button:m.Z},imports:"import { Button } from '@themesberg/react-bootstrap';",example:'<React.Fragment>\n  <Button disabled variant="primary" className="mb-2 me-2">\n    Primary button\n  </Button>\n  <Button disabled variant="secondary" className="mb-2 me-2">\n    Button\n  </Button>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Dropdown buttons",description:(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("p",{children:["Use the ",(0,l.jsx)("code",{children:"<Dropdown>"})," component coupled with the ",(0,l.jsx)("code",{children:"<Button>"})," component in order to create dropdown items when clicking on a button. The ",(0,l.jsx)("code",{children:" <Dropdown.Toggle>"})," is the component that will trigger the dropdown menu, while the ",(0,l.jsx)("code",{children:"<Dropdown.Menu>"})," is the actual menu where you can add the dropdown items."]}),(0,l.jsxs)("p",{children:["The ",(0,l.jsx)("code",{children:"<Button>"})," component is used either before or after the toggle component, but all of this is wrapped around with the main ",(0,l.jsx)("code",{children:"<Dropdown>"})," component."]})]}),scope:{Button:m.Z,Dropdown:c.Z,ButtonGroup:d.Z,FontAwesomeIcon:e.G,faAngleDown:r.gc2},imports:'import { Button, Dropdown, ButtonGroup } from \'@themesberg/react-bootstrap\';\nimport { FontAwesomeIcon } from "@fortawesome/react-fontawesome";\nimport { faAngleDown } from "@fortawesome/free-solid-svg-icons";',example:'<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className="me-2 mb-2">\n    <Button variant="primary">Primary</Button>\n\n    <Dropdown.Toggle split variant="primary">\n      <FontAwesomeIcon icon={faAngleDown} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup} className="mb-2 me-2">\n    <Dropdown.Toggle split variant="tertiary">\n      <FontAwesomeIcon icon={faAngleDown} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Dropdown sizing",description:(0,l.jsxs)("p",{children:["You may want to use one of the three main sizing options for the ",(0,l.jsx)("code",{children:"<Dropdown>"})," component, so in order to do that you only need to use the ",(0,l.jsx)("code",{children:'size="md"'})," or ",(0,l.jsx)("code",{children:'size="lg"'})," attributes for the ",(0,l.jsx)("code",{children:"<Button>"})," component inside the dropdown component."]}),scope:{Button:m.Z,Dropdown:c.Z,ButtonGroup:d.Z,FontAwesomeIcon:e.G,faAngleDown:r.gc2},imports:'import { Button, ButtonGroup, Dropdown } from \'@themesberg/react-bootstrap\';\nimport { FontAwesomeIcon } from "@fortawesome/react-fontawesome";\nimport { faAngleDown } from "@fortawesome/free-solid-svg-icons";',example:'<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className="me-2 mb-2">\n    <Button size="sm" variant="primary">Small</Button>\n\n    <Dropdown.Toggle split variant="primary">\n      <FontAwesomeIcon icon={faAngleDown} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className="me-2 mb-2">\n    <Button variant="secondary">Default</Button>\n\n    <Dropdown.Toggle split variant="secondary">\n      <FontAwesomeIcon icon={faAngleDown} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className="me-2 mb-2">\n    <Button size="lg" variant="tertiary">Large</Button>\n\n    <Dropdown.Toggle split variant="tertiary">\n      <FontAwesomeIcon icon={faAngleDown} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>'}),(0,l.jsx)(p.Z,{title:"Dropdown direction",description:(0,l.jsxs)("p",{children:["If you want to change the direction of the ",(0,l.jsx)("code",{children:"<Dropdown>"})," component, you can do that by using the ",(0,l.jsx)("code",{children:'direction="*"'})," attribute where you can use ",(0,l.jsx)("code",{children:"up"}),", ",(0,l.jsx)("code",{children:"right"}),", ",(0,l.jsx)("code",{children:"down"}),", or ",(0,l.jsx)("code",{children:"left"})," as attribute values."]}),scope:{Button:m.Z,Dropdown:c.Z,ButtonGroup:d.Z,FontAwesomeIcon:e.G,faAngleDown:r.gc2,faAngleUp:r.onQ,faAngleLeft:r.EyR,faAngleRight:r.yOZ},imports:'import { Button, ButtonGroup, Dropdown } from \'@themesberg/react-bootstrap\';\nimport { FontAwesomeIcon } from "@fortawesome/react-fontawesome";\nimport { faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from "@fortawesome/free-solid-svg-icons";',example:'<React.Fragment>\n  <Dropdown drop={faAngleUp} as={ButtonGroup} className="me-2 mb-2">\n    <Button size="sm" variant="primary">Up</Button>\n\n    <Dropdown.Toggle split variant="primary">\n      <FontAwesomeIcon icon={faAngleUp} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleRight} as={ButtonGroup} className="me-2 mb-2">\n    <Button variant="secondary">Right</Button>\n\n    <Dropdown.Toggle split variant="secondary">\n      <FontAwesomeIcon icon={faAngleRight} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className="me-2 mb-2">\n    <Button size="lg" variant="tertiary">Down</Button>\n\n    <Dropdown.Toggle split variant="tertiary">\n      <FontAwesomeIcon icon={faAngleDown} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleLeft} as={ButtonGroup} className="me-2 mb-2">\n    <Button size="lg" variant="tertiary">Left</Button>\n\n    <Dropdown.Toggle split variant="tertiary">\n      <FontAwesomeIcon icon={faAngleLeft} className="dropdown-arrow" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#action">Action</Dropdown.Item>\n      <Dropdown.Item href="#action">Another action</Dropdown.Item>\n      <Dropdown.Item href="#action">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#action">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>'})]})})}},2881:function(o,n,t){var e=t(87462),r=t(63366),a=t(81694),i=t.n(a),s=t(72791),m=t(89496),c=s.forwardRef((function(o,n){var t=o.bsPrefix,a=o.size,c=o.vertical,d=o.className,p=o.as,l=void 0===p?"div":p,u=(0,r.Z)(o,["bsPrefix","size","vertical","className","as"]),w=(0,m.vE)(t,"btn-group"),h=w;return c&&(h=w+"-vertical"),s.createElement(l,(0,e.Z)({},u,{ref:n,className:i()(d,h,a&&w+"-"+a)}))}));c.displayName="ButtonGroup",c.defaultProps={vertical:!1,role:"group"},n.Z=c}}]);
//# sourceMappingURL=4.9687ab50.chunk.js.map