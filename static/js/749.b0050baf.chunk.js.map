{"version":3,"file":"static/js/749.b0050baf.chunk.js","mappings":"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","sources":["../node_modules/copy-to-clipboard/index.js","../node_modules/prism-react-renderer/dist/index.js","../node_modules/prism-react-renderer/prism/index.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/toggle-selection/index.js"],"sourcesContent":["\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\n var Prism = (function () {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\treturn _;\n\n}());\n\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n\nexport default prism;\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nvar _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  var _super = _createSuper(CopyToClipboard);\n\n  function CopyToClipboard() {\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","prism","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","newlineRe","normalizeEmptyLines","line","push","types","content","empty","appendTypes","add","typesSize","concat","themeToDict","theme","language","plain","base","create","themeDict","styles","reduce","acc","themeEntry","languages","includes","forEach","type","accStyle","root","backgroundColor","objectWithoutProperties","exclude","k","indexOf","Highlight","Component","this$1","args","len","props","undefined","prevTheme","prevLanguage","ref","className","output","getThemeDict","display","baseStyle","typeStyles","map","token","join","children","getStyleForToken","Prism","code","grammar","env","tokens","hooks","run","tokenize","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","alias","splitByNewlines","split","newlineCount","i$1","pop","normalizeTokens","getLineProps","getTokenProps","lang","uniqueId","plainTextGrammar","_","util","encode","Token","Array","isArray","o","toString","slice","objId","clone","deepClone","visited","id","v","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","RegExp","classList","isActive","defaultActivation","no","contains","plaintext","txt","extend","redef","insertBefore","inside","before","insert","ret","newToken","old","DFS","callback","property","propertyType","plugins","highlight","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","name","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","currentNode","reach","str","removeCount","from","to","p","matchStr","after","removeFrom","prev","nestedRematch","newNode","count","s","tag","classes","attributes","aliases","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","getElementById","innerHTML","String","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","offset","open","close","stackHeight","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","keys","substring","middle","replacement","afterTokens","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","_typeof","Symbol","iterator","CopyToClipboard","_react","_interopRequireDefault","_copyToClipboard","_excluded","__esModule","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","_setPrototypeOf","setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","getPrototypeOf","_React$PureComponent","subClass","superClass","_inherits","protoProps","staticProps","_super","_this","_len","_key","event","_this$props","elem","Children","only","onClick","_this$props2","cloneElement","PureComponent","rangeCount","active","activeElement","ranges","getRangeAt","blur","focus"],"sourceRoot":""}